{"version":3,"file":"AccountPicker.jsx","sourceRoot":"","sources":["../../../src/components/AccountPicker.tsx"],"names":[],"mappings":"AAAA,OAAO,aAAa,MAAM,uBAAuB,CAAA;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAA;AAC1D,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAA;AAC1D,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAA;AAC1D,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAA;AAEpC,MAAM,CAAC,OAAO,UAAU,aAAa;IAC3B,IAAA,OAAO,GAAK,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,QAArC,CAAqC;IAEpD,SAAS,QAAQ,CAAC,KAAa;QAC7B,IAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;QAC7B,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;QACjC,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAA;QACxD,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAA;QACxD,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAA;IAC1D,CAAC;IAED,OAAO,CACL,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAA/B,CAA+B,CAAC,CAAC,UAAU,CAAC,WAAW,CAC5F;MAAA,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CACnC;MAAA,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CACrC;IAAA,EAAE,MAAM,CAAC,CACV,CAAA;AACH,CAAC","sourcesContent":["import SettingsStore from '@/store/SettingsStore'\nimport { cosmosAddresses } from '@/utils/CosmosWalletUtil'\nimport { eip155Addresses } from '@/utils/EIP155WalletUtil'\nimport { solanaAddresses } from '@/utils/SolanaWalletUtil'\nimport { useSnapshot } from 'valtio'\n\nexport default function AccountPicker() {\n  const { account } = useSnapshot(SettingsStore.state)\n\n  function onSelect(value: string) {\n    const account = Number(value)\n    SettingsStore.setAccount(account)\n    SettingsStore.setEIP155Address(eip155Addresses[account])\n    SettingsStore.setCosmosAddress(cosmosAddresses[account])\n    SettingsStore.setSolanaAddress(solanaAddresses[account])\n  }\n\n  return (\n    <select value={account} onChange={e => onSelect(e.currentTarget.value)} aria-label=\"addresses\">\n      <option value={0}>Account 1</option>\n      <option value={1}>Account 2</option>\n    </select>\n  )\n}\n"]}