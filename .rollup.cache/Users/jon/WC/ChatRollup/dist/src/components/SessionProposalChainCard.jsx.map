{"version":3,"file":"SessionProposalChainCard.jsx","sourceRoot":"","sources":["../../../src/components/SessionProposalChainCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import ChainCard from '@/components/ChainCard'\nimport { COSMOS_MAINNET_CHAINS } from '@/data/COSMOSData'\nimport { EIP155_MAINNET_CHAINS, EIP155_TEST_CHAINS } from '@/data/EIP155Data'\nimport { SOLANA_MAINNET_CHAINS, SOLANA_TEST_CHAINS } from '@/data/SolanaData'\nimport { formatChainName } from '@/utils/HelperUtil'\nimport { Col, Row, Text } from '@nextui-org/react'\nimport { ProposalTypes } from '@walletconnect/types'\nimport { Fragment } from 'react'\n\n/**\n * Utilities\n */\nconst CHAIN_METADATA = {\n  ...COSMOS_MAINNET_CHAINS,\n  ...SOLANA_MAINNET_CHAINS,\n  ...EIP155_MAINNET_CHAINS,\n  ...EIP155_TEST_CHAINS,\n  ...SOLANA_TEST_CHAINS\n}\n\n/**\n * Types\n */\ninterface IProps {\n  requiredNamespace: ProposalTypes.RequiredNamespace\n}\n\n/**\n * Component\n */\nexport default function SessionProposalChainCard({ requiredNamespace }: IProps) {\n  return (\n    <Fragment>\n      {requiredNamespace.chains.map(chainId => {\n        const extensionMethods: ProposalTypes.RequiredNamespace['methods'] = []\n        const extensionEvents: ProposalTypes.RequiredNamespace['events'] = []\n\n        requiredNamespace.extension?.map(({ chains, methods, events }) => {\n          if (chains.includes(chainId)) {\n            extensionMethods.push(...methods)\n            extensionEvents.push(...events)\n          }\n        })\n\n        const allMethods = [...requiredNamespace.methods, ...extensionMethods]\n        const allEvents = [...requiredNamespace.events, ...extensionEvents]\n        // @ts-expect-error\n        const rgb = CHAIN_METADATA[chainId]?.rgb\n\n        return (\n          <ChainCard key={chainId} rgb={rgb ?? ''} flexDirection=\"col\" alignItems=\"flex-start\">\n            <Text h5 css={{ marginBottom: '$5' }}>\n              {formatChainName(chainId)}\n            </Text>\n            <Row>\n              <Col>\n                <Text h6>Methods</Text>\n                <Text color=\"$gray300\">{allMethods.length ? allMethods.join(', ') : '-'}</Text>\n              </Col>\n            </Row>\n            <Row css={{ marginTop: '$5' }}>\n              <Col>\n                <Text h6>Events</Text>\n                <Text color=\"$gray300\">{allEvents.length ? allEvents.join(', ') : '-'}</Text>\n              </Col>\n            </Row>\n          </ChainCard>\n        )\n      })}\n    </Fragment>\n  )\n}\n"]}