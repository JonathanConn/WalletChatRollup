{"version":3,"file":"QrReader.jsx","sourceRoot":"","sources":["../../../src/components/QrReader.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAA;AACnD,OAAO,OAAO,MAAM,cAAc,CAAA;AAClC,OAAO,KAAK,MAAM,YAAY,CAAA;AAC9B,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAE1C;;;GAGG;AACH,IAAM,aAAa,GAAG,OAAO,CAAC,cAAM,OAAA,MAAM,CAAC,qBAAqB,CAAC,EAA7B,CAA6B,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAA;AASlF;;GAEG;AACH,MAAM,CAAC,OAAO,UAAU,QAAQ,CAAC,EAAqB;QAAnB,SAAS,eAAA;IACpC,IAAA,KAAkB,QAAQ,CAAC,KAAK,CAAC,EAAhC,IAAI,QAAA,EAAE,OAAO,QAAmB,CAAA;IACjC,IAAA,KAAwB,QAAQ,CAAC,KAAK,CAAC,EAAtC,OAAO,QAAA,EAAE,UAAU,QAAmB,CAAA;IAE7C,SAAS,OAAO;QACd,OAAO,CAAC,KAAK,CAAC,CAAA;IAChB,CAAC;IAED,SAAe,MAAM,CAAC,IAAmB;;;;;6BACnC,IAAI,EAAJ,wBAAI;wBACN,qBAAM,SAAS,CAAC,IAAI,CAAC,EAAA;;wBAArB,SAAqB,CAAA;wBACrB,OAAO,CAAC,KAAK,CAAC,CAAA;;;;;;KAEjB;IAED,SAAS,aAAa;QACpB,UAAU,CAAC,IAAI,CAAC,CAAA;QAChB,OAAO,CAAC,IAAI,CAAC,CAAA;IACf,CAAC;IAED,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;MAAA,CAAC,IAAI,CAAC,CAAC,CAAC,CACN,CAAC,QAAQ,CACP;UAAA,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,EAAG,CACtD;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAC1B;YAAA,CAAC,aAAa,CACZ,MAAM,CAAC,CAAC,cAAM,OAAA,UAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAChC,cAAc,CAAC,CAAC,KAAK,CAAC,CACtB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,MAAM,CAAC,CAAC,MAAM,CAAC,CACf,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAE7B;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,QAAQ,CAAC,CACZ,CAAC,CAAC,CAAC,CACF,CAAC,GAAG,CAAC,SAAS,CAAC,yBAAyB,CACtC;UAAA,CAAC,KAAK,CACJ,GAAG,CAAC,oBAAoB,CACxB,KAAK,CAAC,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,CAAC,GAAG,CAAC,CACZ,GAAG,CAAC,cAAc,CAClB,SAAS,CAAC,QAAQ,EAEpB;UAAA,CAAC,MAAM,CACL,KAAK,CAAC,UAAU,CAChB,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CACzC,OAAO,CAAC,CAAC,aAAa,CAAC,CAEvB;;UACF,EAAE,MAAM,CACV;QAAA,EAAE,GAAG,CAAC,CACP,CACH;IAAA,EAAE,GAAG,CAAC,CACP,CAAA;AACH,CAAC","sourcesContent":["import { Button, Loading } from '@nextui-org/react'\nimport dynamic from 'next/dynamic'\nimport Image from 'next/image'\nimport { Fragment, useState } from 'react'\n\n/**\n * You can use normal import if you are not within next / ssr environment\n * @info https://nextjs.org/docs/advanced-features/dynamic-import\n */\nconst ReactQrReader = dynamic(() => import('react-qr-reader-es6'), { ssr: false })\n\n/**\n * Types\n */\ninterface IProps {\n  onConnect: (uri: string) => Promise<void>\n}\n\n/**\n * Component\n */\nexport default function QrReader({ onConnect }: IProps) {\n  const [show, setShow] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  function onError() {\n    setShow(false)\n  }\n\n  async function onScan(data: string | null) {\n    if (data) {\n      await onConnect(data)\n      setShow(false)\n    }\n  }\n\n  function onShowScanner() {\n    setLoading(true)\n    setShow(true)\n  }\n\n  return (\n    <div className=\"container\">\n      {show ? (\n        <Fragment>\n          {loading && <Loading css={{ position: 'absolute' }} />}\n          <div className=\"qrVideoMask\">\n            <ReactQrReader\n              onLoad={() => setLoading(false)}\n              showViewFinder={false}\n              onError={onError}\n              onScan={onScan}\n              style={{ width: '100%' }}\n            />\n          </div>\n        </Fragment>\n      ) : (\n        <div className=\"container qrPlaceholder\">\n          <Image\n            src=\"/icons/qr-icon.svg\"\n            width={100}\n            height={100}\n            alt=\"qr code icon\"\n            className=\"qrIcon\"\n          />\n          <Button\n            color=\"gradient\"\n            css={{ marginTop: '$10', width: '100%' }}\n            onClick={onShowScanner}\n          >\n            Scan QR code\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n"]}