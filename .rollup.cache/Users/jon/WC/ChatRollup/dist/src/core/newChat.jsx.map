{"version":3,"file":"newChat.jsx","sourceRoot":"","sources":["../../../src/core/newChat.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useSnapshot } from 'valtio'\nimport { FiArrowRight } from 'react-icons/fi'\nimport { Input, Row } from '@nextui-org/react'\nimport PageHeader from '@/components/PageHeader'\nimport { chatClient } from '@/utils/WalletConnectUtil'\nimport { ChatClientTypes } from '@walletconnect/chat-client'\nimport ChatPrimaryCTAButton from '@/components/ChatPrimaryCTAButton'\nimport { demoContactsMap } from '@/config/chatConstants'\nimport SettingsStore from '@/store/SettingsStore'\nimport { useRouter } from 'next/router'\n\nexport default function NewChatPage() {\n  const [address, setAddress] = useState('')\n  const router = useRouter()\n\n  const { eip155Address } = useSnapshot(SettingsStore.state)\n\n  useEffect(() => {\n    chatClient.once('chat_invite_accepted', args => {\n      const newChatTarget = new URLSearchParams(document.location.search).get('target')\n      router.push(`/chat?topic=${args.topic}&peerAccount=${newChatTarget}`)\n    })\n  }, [router])\n\n  const createInvite = useCallback(\n    async (targetAddress: string) => {\n      await chatClient.invite({\n        inviteeAccount: targetAddress,\n        inviterAccount: `eip155:1:${eip155Address}`,\n        message: \"hey let's message\",\n        inviteePublicKey: await chatClient.resolve({ account: targetAddress })\n      })\n    },\n    [eip155Address]\n  )\n\n  const onInvite = useCallback(\n    async (addressToInvite: string) => {\n      if (demoContactsMap[addressToInvite]) {\n        await createInvite(demoContactsMap[addressToInvite])\n      } else {\n        console.log('onInvite: inviting address ', addressToInvite)\n        await createInvite(addressToInvite)\n      }\n      setAddress('')\n    },\n    [setAddress, createInvite]\n  )\n\n  useEffect(() => {\n    const newChatTarget = new URLSearchParams(document.location.search).get('target')\n    if (newChatTarget) {\n      setAddress(newChatTarget)\n      onInvite(newChatTarget)\n    }\n  }, [onInvite, setAddress])\n\n  return (\n    <Fragment>\n      <PageHeader\n        title=\"New Chat\"\n        withBackButton\n        backButtonHref=\"/chats\"\n        ctaButton={\n          <ChatPrimaryCTAButton icon={<FiArrowRight />} onClick={() => onInvite(address)} />\n        }\n      />\n\n      <Row justify=\"center\">\n        <Input\n          fullWidth\n          animated={false}\n          label=\"ENS Name or Address\"\n          placeholder=\"username.eth or 0x0...\"\n          value={address}\n          onChange={e => {\n            setAddress(e.target.value)\n          }}\n          css={{\n            padding: '$5',\n            background: '$gray800'\n          }}\n        />\n      </Row>\n    </Fragment>\n  )\n}\n"]}