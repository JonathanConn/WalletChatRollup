{"version":3,"file":"walletconnect.jsx","sourceRoot":"","sources":["../../../src/core/walletconnect.tsx"],"names":[],"mappings":";AAAA,OAAO,UAAU,MAAM,yBAAyB,CAAA;AAChD,OAAO,QAAQ,MAAM,uBAAuB,CAAA;AAC5C,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAA;AACtD,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AAChE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAE1C,MAAM,CAAC,OAAO,UAAU,iBAAiB;IACjC,IAAA,KAAgB,QAAQ,CAAC,EAAE,CAAC,EAA3B,GAAG,QAAA,EAAE,MAAM,QAAgB,CAAA;IAC5B,IAAA,KAAwB,QAAQ,CAAC,KAAK,CAAC,EAAtC,OAAO,QAAA,EAAE,UAAU,QAAmB,CAAA;IAE7C,SAAe,SAAS,CAAC,GAAW;;;;;;;wBAEhC,UAAU,CAAC,IAAI,CAAC,CAAA;wBAChB,qBAAM,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,KAAA,EAAE,CAAC,EAAA;;wBAA9B,SAA8B,CAAA;;;;wBAE9B,KAAK,CAAC,KAAG,CAAC,CAAA;;;wBAEV,MAAM,CAAC,EAAE,CAAC,CAAA;wBACV,UAAU,CAAC,KAAK,CAAC,CAAA;;;;;;KAEpB;IAED,OAAO,CACL,CAAC,QAAQ,CACP;MAAA,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,EAEjC;;MAAA,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAE/B;;MAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,CAClF;;MACF,EAAE,IAAI,CAEN;;MAAA,CAAC,KAAK,CACJ,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CACvB,QAAQ,CACR,UAAU,CAAC,sBAAsB,CACjC,WAAW,CAAC,yBAAyB,CACrC,QAAQ,CAAC,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC,CACtC,KAAK,CAAC,CAAC,GAAG,CAAC,CACX,YAAY,CAAC,CACX,CAAC,MAAM,CACL,IAAI,CAAC,IAAI,CACT,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CACf,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,CACzB,OAAO,CAAC,CAAC,cAAM,OAAA,SAAS,CAAC,GAAG,CAAC,EAAd,CAAc,CAAC,CAC9B,KAAK,CAAC,UAAU,CAEhB;YAAA,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAG,CAAC,CAAC,CAAC,SAAS,CAC9C;UAAA,EAAE,MAAM,CAAC,CACV,EAEL;IAAA,EAAE,QAAQ,CAAC,CACZ,CAAA;AACH,CAAC","sourcesContent":["import PageHeader from '@/components/PageHeader'\nimport QrReader from '@/components/QrReader'\nimport { signClient } from '@/utils/WalletConnectUtil'\nimport { Button, Input, Loading, Text } from '@nextui-org/react'\nimport { Fragment, useState } from 'react'\n\nexport default function WalletConnectPage() {\n  const [uri, setUri] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  async function onConnect(uri: string) {\n    try {\n      setLoading(true)\n      await signClient.pair({ uri })\n    } catch (err: unknown) {\n      alert(err)\n    } finally {\n      setUri('')\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Fragment>\n      <PageHeader title=\"WalletConnect\" />\n\n      <QrReader onConnect={onConnect} />\n\n      <Text size={13} css={{ textAlign: 'center', marginTop: '$10', marginBottom: '$10' }}>\n        or use walletconnect uri\n      </Text>\n\n      <Input\n        css={{ width: '100%' }}\n        bordered\n        aria-label=\"wc url connect input\"\n        placeholder=\"e.g. wc:a281567bb3e4...\"\n        onChange={e => setUri(e.target.value)}\n        value={uri}\n        contentRight={\n          <Button\n            size=\"xs\"\n            disabled={!uri}\n            css={{ marginLeft: -60 }}\n            onClick={() => onConnect(uri)}\n            color=\"gradient\"\n          >\n            {loading ? <Loading size=\"sm\" /> : 'Connect'}\n          </Button>\n        }\n      />\n    </Fragment>\n  )\n}\n"]}