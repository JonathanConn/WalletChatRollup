{"version":3,"file":"home.jsx","sourceRoot":"","sources":["../../../src/core/home.tsx"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,0BAA0B,CAAA;AAClD,OAAO,aAAa,MAAM,4BAA4B,CAAA;AACtD,OAAO,UAAU,MAAM,yBAAyB,CAAA;AAChD,OAAO,EAAE,qBAAqB,EAAE,MAAM,mBAAmB,CAAA;AACzD,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAA;AAC7E,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAA;AAC7E,OAAO,aAAa,MAAM,uBAAuB,CAAA;AACjD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAA;AACxC,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAChC,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAA;AAEpC,MAAM,CAAC,OAAO,UAAU,QAAQ;IACxB,IAAA,KAA4D,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,EAA1F,QAAQ,cAAA,EAAE,aAAa,mBAAA,EAAE,aAAa,mBAAA,EAAE,aAAa,mBAAqC,CAAA;IAElG,OAAO,CACL,CAAC,QAAQ,CACP;MAAA,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAC1B;QAAA,CAAC,aAAa,CAAC,AAAD,EAChB;MAAA,EAAE,UAAU,CACZ;MAAA,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CACnC;;MACF,EAAE,IAAI,CACN;MAAA,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAgC;gBAA/B,SAAS,QAAA,EAAE,UAAmB,EAAjB,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,GAAG,SAAA;YAAQ,OAAA,CAC/E,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,IAAI,CAAC,CACV,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,OAAO,CAAC,CAAC,UAAG,SAAS,cAAI,aAAa,CAAE,CAAC,EACzC,CACH;QARgF,CAQhF,CAAC,CACF;MAAA,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAgC;gBAA/B,SAAS,QAAA,EAAE,UAAmB,EAAjB,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,GAAG,SAAA;YAAQ,OAAA,CAC/E,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,IAAI,CAAC,CACV,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,OAAO,CAAC,CAAC,UAAG,SAAS,cAAI,aAAa,CAAE,CAAC,EACzC,CACH;QARgF,CAQhF,CAAC,CACF;MAAA,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAgC;gBAA/B,SAAS,QAAA,EAAE,UAAmB,EAAjB,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,GAAG,SAAA;YAAQ,OAAA,CAC/E,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,IAAI,CAAC,CACV,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,OAAO,CAAC,CAAC,UAAG,SAAS,cAAI,aAAa,CAAE,CAAC,EACzC,CACH;QARgF,CAQhF,CAAC,CAEF;;MAAA,CAAC,QAAQ,CAAC,CAAC,CAAC,CACV,CAAC,QAAQ,CACP;UAAA,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CACnC;;UACF,EAAE,IAAI,CACN;UAAA,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAgC;oBAA/B,SAAS,QAAA,EAAE,UAAmB,EAAjB,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,GAAG,SAAA;gBAAQ,OAAA,CAC5E,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,IAAI,CAAC,CACV,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,OAAO,CAAC,CAAC,UAAG,SAAS,cAAI,aAAa,CAAE,CAAC,EACzC,CACH;YAR6E,CAQ7E,CAAC,CACF;UAAA,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAgC;oBAA/B,SAAS,QAAA,EAAE,UAAmB,EAAjB,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,GAAG,SAAA;gBAAQ,OAAA,CAC5E,CAAC,WAAW,CACV,GAAG,CAAC,CAAC,IAAI,CAAC,CACV,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,OAAO,CAAC,CAAC,UAAG,SAAS,cAAI,aAAa,CAAE,CAAC,EACzC,CACH;YAR6E,CAQ7E,CAAC,CACJ;QAAA,EAAE,QAAQ,CAAC,CACZ,CAAC,CAAC,CAAC,IAAI,CACV;IAAA,EAAE,QAAQ,CAAC,CACZ,CAAA;AACH,CAAC","sourcesContent":["import AccountCard from '@/components/AccountCard'\nimport AccountPicker from '@/components/AccountPicker'\nimport PageHeader from '@/components/PageHeader'\nimport { COSMOS_MAINNET_CHAINS } from '@/data/COSMOSData'\nimport { EIP155_MAINNET_CHAINS, EIP155_TEST_CHAINS } from '@/data/EIP155Data'\nimport { SOLANA_MAINNET_CHAINS, SOLANA_TEST_CHAINS } from '@/data/SolanaData'\nimport SettingsStore from '@/store/SettingsStore'\nimport { Text } from '@nextui-org/react'\nimport { Fragment } from 'react'\nimport { useSnapshot } from 'valtio'\n\nexport default function HomePage() {\n  const { testNets, eip155Address, cosmosAddress, solanaAddress } = useSnapshot(SettingsStore.state)\n\n  return (\n    <Fragment>\n      <PageHeader title=\"Accounts\">\n        <AccountPicker />\n      </PageHeader>\n      <Text h4 css={{ marginBottom: '$5' }}>\n        Mainnets\n      </Text>\n      {Object.entries(EIP155_MAINNET_CHAINS).map(([namespace, { name, logo, rgb }]) => (\n        <AccountCard\n          key={name}\n          name={name}\n          logo={logo}\n          rgb={rgb}\n          address={`${namespace}:${eip155Address}`}\n        />\n      ))}\n      {Object.entries(COSMOS_MAINNET_CHAINS).map(([namespace, { name, logo, rgb }]) => (\n        <AccountCard\n          key={name}\n          name={name}\n          logo={logo}\n          rgb={rgb}\n          address={`${namespace}:${cosmosAddress}`}\n        />\n      ))}\n      {Object.entries(SOLANA_MAINNET_CHAINS).map(([namespace, { name, logo, rgb }]) => (\n        <AccountCard\n          key={name}\n          name={name}\n          logo={logo}\n          rgb={rgb}\n          address={`${namespace}:${solanaAddress}`}\n        />\n      ))}\n\n      {testNets ? (\n        <Fragment>\n          <Text h4 css={{ marginBottom: '$5' }}>\n            Testnets\n          </Text>\n          {Object.entries(EIP155_TEST_CHAINS).map(([namespace, { name, logo, rgb }]) => (\n            <AccountCard\n              key={name}\n              name={name}\n              logo={logo}\n              rgb={rgb}\n              address={`${namespace}:${eip155Address}`}\n            />\n          ))}\n          {Object.entries(SOLANA_TEST_CHAINS).map(([namespace, { name, logo, rgb }]) => (\n            <AccountCard\n              key={name}\n              name={name}\n              logo={logo}\n              rgb={rgb}\n              address={`${namespace}:${solanaAddress}`}\n            />\n          ))}\n        </Fragment>\n      ) : null}\n    </Fragment>\n  )\n}\n"]}