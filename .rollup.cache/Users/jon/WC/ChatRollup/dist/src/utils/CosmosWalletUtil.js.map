{"version":3,"file":"CosmosWalletUtil.js","sourceRoot":"","sources":["../../../src/utils/CosmosWalletUtil.ts"],"names":[],"mappings":";AAAA,OAAO,SAAS,MAAM,iBAAiB,CAAA;AAEvC,MAAM,CAAC,IAAI,OAAkB,CAAA;AAC7B,MAAM,CAAC,IAAI,OAAkB,CAAA;AAC7B,MAAM,CAAC,IAAI,aAAwC,CAAA;AACnD,MAAM,CAAC,IAAI,eAAyB,CAAA;AAEpC,IAAI,QAAgB,CAAA;AACpB,IAAI,QAAgB,CAAA;AAEpB;;GAEG;AACH,MAAM,UAAgB,2BAA2B;;;;;;;oBACzC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;oBACrD,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;yBAEvD,CAAA,SAAS,IAAI,SAAS,CAAA,EAAtB,wBAAsB;oBACd,qBAAM,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAA;;oBAAvD,OAAO,GAAG,SAA6C,CAAA;oBAC7C,qBAAM,SAAS,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAA;;oBAAvD,OAAO,GAAG,SAA6C,CAAA;;wBAE7C,qBAAM,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAA;;oBAAlC,OAAO,GAAG,SAAwB,CAAA;oBACxB,qBAAM,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;wBAElC,iEAAiE;sBAF/B;;oBAAlC,OAAO,GAAG,SAAwB,CAAA;oBAElC,iEAAiE;oBACjE,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,OAAO,CAAC,WAAW,EAAE,CAAC,CAAA;oBAChE,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,OAAO,CAAC,WAAW,EAAE,CAAC,CAAA;;wBAGvD,qBAAM,OAAO,CAAC,UAAU,EAAE,EAAA;;oBAArC,QAAQ,GAAG,SAA0B,CAAA;oBAC1B,qBAAM,OAAO,CAAC,UAAU,EAAE,EAAA;;oBAArC,QAAQ,GAAG,SAA0B,CAAA;oBAErC,aAAa;wBACX,GAAC,QAAQ,IAAG,OAAO;wBACnB,GAAC,QAAQ,IAAG,OAAO;2BACpB,CAAA;oBACD,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;oBAE5C,sBAAO;4BACL,aAAa,eAAA;4BACb,eAAe,iBAAA;yBAChB,EAAA;;;;CACF","sourcesContent":["import CosmosLib from '@/lib/CosmosLib'\n\nexport let wallet1: CosmosLib\nexport let wallet2: CosmosLib\nexport let cosmosWallets: Record<string, CosmosLib>\nexport let cosmosAddresses: string[]\n\nlet address1: string\nlet address2: string\n\n/**\n * Utilities\n */\nexport async function createOrRestoreCosmosWallet() {\n  const mnemonic1 = localStorage.getItem('COSMOS_MNEMONIC_1')\n  const mnemonic2 = localStorage.getItem('COSMOS_MNEMONIC_2')\n\n  if (mnemonic1 && mnemonic2) {\n    wallet1 = await CosmosLib.init({ mnemonic: mnemonic1 })\n    wallet2 = await CosmosLib.init({ mnemonic: mnemonic2 })\n  } else {\n    wallet1 = await CosmosLib.init({})\n    wallet2 = await CosmosLib.init({})\n\n    // Don't store mnemonic in local storage in a production project!\n    localStorage.setItem('COSMOS_MNEMONIC_1', wallet1.getMnemonic())\n    localStorage.setItem('COSMOS_MNEMONIC_2', wallet2.getMnemonic())\n  }\n\n  address1 = await wallet1.getAddress()\n  address2 = await wallet2.getAddress()\n\n  cosmosWallets = {\n    [address1]: wallet1,\n    [address2]: wallet2\n  }\n  cosmosAddresses = Object.keys(cosmosWallets)\n\n  return {\n    cosmosWallets,\n    cosmosAddresses\n  }\n}\n"]}