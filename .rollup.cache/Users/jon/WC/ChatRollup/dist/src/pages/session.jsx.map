{"version":3,"file":"session.jsx","sourceRoot":"","sources":["../../../src/pages/session.tsx"],"names":[],"mappings":"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","sourcesContent":["import PageHeader from '@/components/PageHeader'\nimport ProjectInfoCard from '@/components/ProjectInfoCard'\nimport SessionChainCard from '@/components/SessionChainCard'\nimport { signClient } from '@/utils/WalletConnectUtil'\nimport { Button, Divider, Loading, Row, Text } from '@nextui-org/react'\nimport { getSdkError } from '@walletconnect/utils'\nimport { useRouter } from 'next/router'\nimport { Fragment, useEffect, useState } from 'react'\n\n/**\n * Component\n */\nexport default function SessionPage() {\n  const [topic, setTopic] = useState('')\n  const [updated, setUpdated] = useState(new Date())\n  const { query, replace } = useRouter()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (query?.topic) {\n      setTopic(query.topic as string)\n    }\n  }, [query])\n\n  const session = signClient.session.values.find(s => s.topic === topic)\n\n  if (!session) {\n    return null\n  }\n\n  // Get necessary data from session\n  const expiryDate = new Date(session.expiry * 1000)\n  const { namespaces } = session\n\n  // Handle deletion of a session\n  async function onDeleteSession() {\n    setLoading(true)\n    await signClient.disconnect({ topic, reason: getSdkError('USER_DISCONNECTED') })\n    replace('/sessions')\n    setLoading(false)\n  }\n\n  async function onSessionPing() {\n    setLoading(true)\n    await signClient.ping({ topic })\n    setLoading(false)\n  }\n\n  async function onSessionEmit() {\n    setLoading(true)\n    console.log('baleg')\n    await signClient.emit({\n      topic,\n      event: { name: 'chainChanged', data: 'Hello World' },\n      chainId: 'eip155:1'\n    })\n    setLoading(false)\n  }\n\n  const newNs = {\n    eip155: {\n      accounts: [\n        'eip155:1:0x70012948c348CBF00806A3C79E3c5DAdFaAa347B',\n        'eip155:137:0x70012948c348CBF00806A3C79E3c5DAdFaAa347B'\n      ],\n      methods: ['personal_sign', 'eth_signTypedData', 'eth_sendTransaction'],\n      events: []\n    }\n  }\n\n  async function onSessionUpdate() {\n    setLoading(true)\n    const { acknowledged } = await signClient.update({ topic, namespaces: newNs })\n    await acknowledged()\n    setUpdated(new Date())\n    setLoading(false)\n  }\n\n  // function renderAccountSelection(chain: string) {\n  //   if (isEIP155Chain(chain)) {\n  //     return (\n  //       <ProposalSelectSection\n  //         addresses={eip155Addresses}\n  //         selectedAddresses={selectedAccounts[chain]}\n  //         onSelect={onSelectAccount}\n  //         chain={chain}\n  //       />\n  //     )\n  //   } else if (isCosmosChain(chain)) {\n  //     return (\n  //       <ProposalSelectSection\n  //         addresses={cosmosAddresses}\n  //         selectedAddresses={selectedAccounts[chain]}\n  //         onSelect={onSelectAccount}\n  //         chain={chain}\n  //       />\n  //     )\n  //   } else if (isSolanaChain(chain)) {\n  //     return (\n  //       <ProposalSelectSection\n  //         addresses={solanaAddresses}\n  //         selectedAddresses={selectedAccounts[chain]}\n  //         onSelect={onSelectAccount}\n  //         chain={chain}\n  //       />\n  //     )\n  //   }\n  // }\n\n  return (\n    <Fragment>\n      <PageHeader title=\"Session Details\" />\n\n      <ProjectInfoCard metadata={session.peer.metadata} />\n\n      <Divider y={2} />\n\n      {Object.keys(namespaces).map(chain => {\n        return (\n          <Fragment key={chain}>\n            <Text h4 css={{ marginBottom: '$5' }}>{`Review ${chain} permissions`}</Text>\n            <SessionChainCard namespace={namespaces[chain]} />\n            {/* {renderAccountSelection(chain)} */}\n            <Divider y={2} />\n          </Fragment>\n        )\n      })}\n\n      <Row justify=\"space-between\">\n        <Text h5>Expiry</Text>\n        <Text css={{ color: '$gray400' }}>{expiryDate.toDateString()}</Text>\n      </Row>\n\n      <Row justify=\"space-between\">\n        <Text h5>Last Updated</Text>\n        <Text css={{ color: '$gray400' }}>{updated.toDateString()}</Text>\n      </Row>\n\n      <Row css={{ marginTop: '$10' }}>\n        <Button flat css={{ width: '100%' }} color=\"error\" onClick={onDeleteSession}>\n          {loading ? <Loading size=\"sm\" color=\"error\" /> : 'Delete'}\n        </Button>\n      </Row>\n\n      <Row css={{ marginTop: '$10' }}>\n        <Button flat css={{ width: '100%' }} color=\"primary\" onClick={onSessionPing}>\n          {loading ? <Loading size=\"sm\" color=\"primary\" /> : 'Ping'}\n        </Button>\n      </Row>\n\n      <Row css={{ marginTop: '$10' }}>\n        <Button flat css={{ width: '100%' }} color=\"secondary\" onClick={onSessionEmit}>\n          {loading ? <Loading size=\"sm\" color=\"secondary\" /> : 'Emit'}\n        </Button>\n      </Row>\n\n      <Row css={{ marginTop: '$10' }}>\n        <Button flat css={{ width: '100%' }} color=\"warning\" onClick={onSessionUpdate}>\n          {loading ? <Loading size=\"sm\" color=\"warning\" /> : 'Update'}\n        </Button>\n      </Row>\n    </Fragment>\n  )\n}\n"]}