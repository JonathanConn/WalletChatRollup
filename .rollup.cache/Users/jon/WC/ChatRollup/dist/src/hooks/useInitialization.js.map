{"version":3,"file":"useInitialization.js","sourceRoot":"","sources":["../../../src/hooks/useInitialization.ts"],"names":[],"mappings":";AAAA,OAAO,aAAa,MAAM,uBAAuB,CAAA;AACjD,OAAO,EAAE,2BAA2B,EAAE,MAAM,0BAA0B,CAAA;AACtE,OAAO,EAAE,2BAA2B,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAA;AACrF,OAAO,EAAE,2BAA2B,EAAE,MAAM,0BAA0B,CAAA;AACtE,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAA;AAC1F,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAExD,MAAM,CAAC,OAAO,UAAU,iBAAiB;IAAzC,iBA4CC;IA3CO,IAAA,KAAgC,QAAQ,CAAC,KAAK,CAAC,EAA9C,WAAW,QAAA,EAAE,cAAc,QAAmB,CAAA;IAErD,IAAM,YAAY,GAAG,WAAW,CAAC;;;;;;;;oBAEvB,iBAAe,QAAQ,CAC3B,MAAA,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,mCAAI,GAAG,CACvE,CAAA;oBACO,oBAAoB,2BAA2B,EAAE,gBAAlC,CAAkC;oBAC7B,qBAAM,2BAA2B,EAAE,EAAA;;oBAAvD,eAAe,GAAK,CAAA,SAAmC,CAAA,gBAAxC;oBACK,qBAAM,2BAA2B,EAAE,EAAA;;oBAAvD,eAAe,GAAK,CAAA,SAAmC,CAAA,gBAAxC;oBAEvB,aAAa,CAAC,UAAU,CAAC,cAAY,CAAC,CAAA;oBACtC,aAAa,CAAC,gBAAgB,CAAC,iBAAe,CAAC,cAAY,CAAC,CAAC,CAAA;oBAC7D,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,cAAY,CAAC,CAAC,CAAA;oBAC7D,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,cAAY,CAAC,CAAC,CAAA;oBAE7D,qBAAM,gBAAgB,EAAE,EAAA;;oBAAxB,SAAwB,CAAA;oBAExB,qBAAM,gBAAgB,EAAE,EAAA;;oBAAxB,SAAwB,CAAA;oBACxB,qBAAM,UAAU,CAAC,QAAQ,CAAC;4BACxB,OAAO,EAAE,mBAAY,iBAAe,CAAC,cAAY,CAAC,CAAE;4BACpD,MAAM,EAAE,UAAM,OAAO;;oCACnB,sBAAO,aAAa,CAAC,iBAAe,CAAC,cAAY,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,EAAA;;iCACzE;yBACF,CAAC,EAAA;;oBALF,SAKE,CAAA;oBACF,OAAO,CAAC,GAAG,CACT,2CAA2C,EAC3C,mBAAY,iBAAe,CAAC,cAAY,CAAC,CAAE,CAC5C,CAAA;oBAED,cAAc,CAAC,IAAI,CAAC,CAAA;;;;oBAEpB,KAAK,CAAC,KAAG,CAAC,CAAA;;;;;SAEb,EAAE,EAAE,CAAC,CAAA;IAEN,SAAS,CAAC;QACR,IAAI,CAAC,WAAW,EAAE;YAChB,YAAY,EAAE,CAAA;SACf;IACH,CAAC,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAA;IAE/B,OAAO,WAAW,CAAA;AACpB,CAAC","sourcesContent":["import SettingsStore from '@/store/SettingsStore'\nimport { createOrRestoreCosmosWallet } from '@/utils/CosmosWalletUtil'\nimport { createOrRestoreEIP155Wallet, eip155Wallets } from '@/utils/EIP155WalletUtil'\nimport { createOrRestoreSolanaWallet } from '@/utils/SolanaWalletUtil'\nimport { chatClient, createChatClient, createSignClient } from '@/utils/WalletConnectUtil'\nimport { useCallback, useEffect, useState } from 'react'\n\nexport default function useInitialization() {\n  const [initialized, setInitialized] = useState(false)\n\n  const onInitialize = useCallback(async () => {\n    try {\n      const accountIndex = parseInt(\n        new URLSearchParams(window.location.search).get('accountIndex') ?? '0'\n      )\n      const { eip155Addresses } = createOrRestoreEIP155Wallet()\n      const { cosmosAddresses } = await createOrRestoreCosmosWallet()\n      const { solanaAddresses } = await createOrRestoreSolanaWallet()\n\n      SettingsStore.setAccount(accountIndex)\n      SettingsStore.setEIP155Address(eip155Addresses[accountIndex])\n      SettingsStore.setCosmosAddress(cosmosAddresses[accountIndex])\n      SettingsStore.setSolanaAddress(solanaAddresses[accountIndex])\n\n      await createSignClient()\n\n      await createChatClient()\n      await chatClient.register({\n        account: `eip155:1:${eip155Addresses[accountIndex]}`,\n        onSign: async message => {\n          return eip155Wallets[eip155Addresses[accountIndex]].signMessage(message)\n        }\n      })\n      console.log(\n        '[Chat] registered address %s on keyserver',\n        `eip155:1:${eip155Addresses[accountIndex]}`\n      )\n\n      setInitialized(true)\n    } catch (err: unknown) {\n      alert(err)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!initialized) {\n      onInitialize()\n    }\n  }, [initialized, onInitialize])\n\n  return initialized\n}\n"]}