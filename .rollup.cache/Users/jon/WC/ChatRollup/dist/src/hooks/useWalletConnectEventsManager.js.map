{"version":3,"file":"useWalletConnectEventsManager.js","sourceRoot":"","sources":["../../../src/hooks/useWalletConnectEventsManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { COSMOS_SIGNING_METHODS } from '@/data/COSMOSData'\nimport { EIP155_SIGNING_METHODS } from '@/data/EIP155Data'\nimport { SOLANA_SIGNING_METHODS } from '@/data/SolanaData'\nimport ModalStore from '@/store/ModalStore'\nimport { signClient } from '@/utils/WalletConnectUtil'\nimport { SignClientTypes } from '@walletconnect/types'\nimport { useCallback, useEffect } from 'react'\n\nexport default function useWalletConnectEventsManager(initialized: boolean) {\n  /******************************************************************************\n   * 1. Open session proposal modal for confirmation / rejection\n   *****************************************************************************/\n  const onSessionProposal = useCallback(\n    (proposal: SignClientTypes.EventArguments['session_proposal']) => {\n      ModalStore.open('SessionProposalModal', { proposal })\n    },\n    []\n  )\n\n  /******************************************************************************\n   * 3. Open request handling modal based on method that was used\n   *****************************************************************************/\n  const onSessionRequest = useCallback(\n    async (requestEvent: SignClientTypes.EventArguments['session_request']) => {\n      console.log('session_request', requestEvent)\n      const { topic, params } = requestEvent\n      const { request } = params\n      const requestSession = signClient.session.get(topic)\n\n      switch (request.method) {\n        case EIP155_SIGNING_METHODS.ETH_SIGN:\n        case EIP155_SIGNING_METHODS.PERSONAL_SIGN:\n          return ModalStore.open('SessionSignModal', { requestEvent, requestSession })\n\n        case EIP155_SIGNING_METHODS.ETH_SIGN_TYPED_DATA:\n        case EIP155_SIGNING_METHODS.ETH_SIGN_TYPED_DATA_V3:\n        case EIP155_SIGNING_METHODS.ETH_SIGN_TYPED_DATA_V4:\n          return ModalStore.open('SessionSignTypedDataModal', { requestEvent, requestSession })\n\n        case EIP155_SIGNING_METHODS.ETH_SEND_TRANSACTION:\n        case EIP155_SIGNING_METHODS.ETH_SIGN_TRANSACTION:\n          return ModalStore.open('SessionSendTransactionModal', { requestEvent, requestSession })\n\n        case COSMOS_SIGNING_METHODS.COSMOS_SIGN_DIRECT:\n        case COSMOS_SIGNING_METHODS.COSMOS_SIGN_AMINO:\n          return ModalStore.open('SessionSignCosmosModal', { requestEvent, requestSession })\n\n        case SOLANA_SIGNING_METHODS.SOLANA_SIGN_MESSAGE:\n        case SOLANA_SIGNING_METHODS.SOLANA_SIGN_TRANSACTION:\n          return ModalStore.open('SessionSignSolanaModal', { requestEvent, requestSession })\n\n        default:\n          return ModalStore.open('SessionUnsuportedMethodModal', { requestEvent, requestSession })\n      }\n    },\n    []\n  )\n\n  /******************************************************************************\n   * Set up WalletConnect event listeners\n   *****************************************************************************/\n  useEffect(() => {\n    if (initialized) {\n      signClient.on('session_proposal', onSessionProposal)\n      signClient.on('session_request', onSessionRequest)\n      // TODOs\n      signClient.on('session_ping', data => console.log('ping', data))\n      signClient.on('session_event', data => console.log('event', data))\n      signClient.on('session_update', data => console.log('update', data))\n      signClient.on('session_delete', data => console.log('delete', data))\n    }\n  }, [initialized, onSessionProposal, onSessionRequest])\n}\n"]}