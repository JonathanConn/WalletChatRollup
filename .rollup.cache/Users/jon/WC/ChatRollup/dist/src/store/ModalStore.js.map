{"version":3,"file":"ModalStore.js","sourceRoot":"","sources":["../../../src/store/ModalStore.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAA;AAwB9B;;GAEG;AACH,IAAM,KAAK,GAAG,KAAK,CAAQ;IACzB,IAAI,EAAE,KAAK;CACZ,CAAC,CAAA;AAEF;;GAEG;AACH,IAAM,UAAU,GAAG;IACjB,KAAK,OAAA;IAEL,IAAI,EAAJ,UAAK,IAAmB,EAAE,IAAmB;QAC3C,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;QACjB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;QACjB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;IACnB,CAAC;IAED,KAAK;QACH,KAAK,CAAC,IAAI,GAAG,KAAK,CAAA;IACpB,CAAC;CACF,CAAA;AAED,eAAe,UAAU,CAAA","sourcesContent":["import { SessionTypes, SignClientTypes } from '@walletconnect/types'\nimport { proxy } from 'valtio'\n\n/**\n * Types\n */\ninterface ModalData {\n  proposal?: SignClientTypes.EventArguments['session_proposal']\n  requestEvent?: SignClientTypes.EventArguments['session_request']\n  requestSession?: SessionTypes.Struct\n}\n\ninterface State {\n  open: boolean\n  view?:\n    | 'SessionProposalModal'\n    | 'SessionSignModal'\n    | 'SessionSignTypedDataModal'\n    | 'SessionSendTransactionModal'\n    | 'SessionUnsuportedMethodModal'\n    | 'SessionSignCosmosModal'\n    | 'SessionSignSolanaModal'\n  data?: ModalData\n}\n\n/**\n * State\n */\nconst state = proxy<State>({\n  open: false\n})\n\n/**\n * Store / Actions\n */\nconst ModalStore = {\n  state,\n\n  open(view: State['view'], data: State['data']) {\n    state.view = view\n    state.data = data\n    state.open = true\n  },\n\n  close() {\n    state.open = false\n  }\n}\n\nexport default ModalStore\n"]}